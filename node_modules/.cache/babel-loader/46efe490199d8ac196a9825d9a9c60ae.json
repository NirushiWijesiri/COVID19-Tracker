{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nirushi Wijesiri\\\\OneDrive\\\\Desktop\\\\Projects\\\\covid-19-tracker\\\\covid-19-tracker\\\\src\\\\LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport numeral from 'numeral';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time\n    }]\n  }\n};\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      ;\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n      let chartData = buildChartData(data, 'cases');\n      console.log(chartData);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am a graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n        borderColor: \"#CC1034\",\n        datasets: [{\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["C:/Users/Nirushi Wijesiri/OneDrive/Desktop/Projects/covid-19-tracker/covid-19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","LineGraph","setData","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","console","log","backgroundColor","borderColor","datasets"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADI;AAIZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL;AADD,GAJE;AASZC,EAAAA,mBAAmB,EAAE,KATT;AAUZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,OADA;AAENC,IAAAA,SAAS,EAAE,KAFL;AAGNC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE,UAAUC,WAAV,EAAuBC,IAAvB,EAA6B;AAChC,eAAOd,OAAO,CAACa,WAAW,CAACE,KAAb,CAAP,CAA2BC,MAA3B,CAAkC,MAAlC,CAAP;AACH;AAHM;AAHL,GAVE;AAmBZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA;AAFJ,KADG;AADH;AAnBI,CAAhB;;AA6BA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACP,IAAD,EAAOQ,OAAP,IAAkBzB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAM0B,cAAc,GAAG,CAACT,IAAD,EAAOU,SAAS,GAAC,OAAjB,KAA6B;AAChD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;;AAEA,SAAI,IAAIC,IAAR,IAAgBb,IAAI,CAACc,KAArB,EAA4B;AACxB,UAAIF,aAAJ,EAAkB;AACd,cAAMG,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEH,IADc;AAEjBI,UAAAA,CAAC,EAAEjB,IAAI,CAACU,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFV,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACH;;AAAA;AACDH,MAAAA,aAAa,GAAGZ,IAAI,CAACU,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACH;;AACD,WAAOF,SAAP;AACH,GAfD;;AAiBA3B,EAAAA,SAAS,CAAC,MAAM;AACZmC,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMpB,IAAI,IAAI;AACV,UAAIW,SAAS,GAAGF,cAAc,CAACT,IAAD,EAAO,OAAP,CAA9B;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAH,MAAAA,OAAO,CAACG,SAAD,CAAP;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEK,QAAC,IAAD;AACA,MAAA,OAAO,EAAExB,OADT;AAEA,MAAA,IAAI,EAAI;AACJsC,QAAAA,eAAe,EAAE,wBADb;AAEJC,QAAAA,WAAW,EAAE,SAFT;AAGJC,QAAAA,QAAQ,EAAE,CAAC;AAAC3B,UAAAA,IAAI,EAAEA;AAAP,SAAD;AAHN;AAFR;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA3CQO,S;;KAAAA,S;AA6CT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from 'numeral';\r\n\r\nconst options = {\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nfunction LineGraph() {\r\n    const [data, setData] = useState({});\r\n\r\n    const buildChartData = (data, casesType='cases') => {\r\n        const chartData = [];\r\n        let lastDataPoint;\r\n\r\n        for(let date in data.cases) {\r\n            if (lastDataPoint){\r\n                const newDataPoint = {\r\n                    x: date,\r\n                    y: data[casesType][date] - lastDataPoint\r\n                }\r\n                chartData.push(newDataPoint);\r\n            };\r\n            lastDataPoint = data[casesType][date];\r\n        }\r\n        return chartData;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            let chartData = buildChartData(data, 'cases');\r\n            console.log(chartData);\r\n            setData(chartData);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>I am a graph</h1>\r\n             <Line \r\n             options={options}\r\n             data = {{\r\n                 backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                 borderColor: \"#CC1034\",\r\n                 datasets: [{data: data}],\r\n             }}\r\n            /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n"]},"metadata":{},"sourceType":"module"}