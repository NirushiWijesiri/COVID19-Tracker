{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nirushi Wijesiri\\\\OneDrive\\\\Desktop\\\\Projects\\\\covid-19-tracker\\\\covid-19-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCounty] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tabledata, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setTableData(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = event => {\n    const countryCode = event.target.value;\n    setCounty(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setCounty(countryCode);\n      setCountryInfo(data);\n    });\n    console.log(countryCode);\n    console.log(\"Country Info >>> \", countryInfo);\n  }; // console.log(countryCode)\n  // console.log(\"Country Info >>> \", countryInfo)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 TRACKER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            varient: \"outlined\",\n            onChange: onCountryChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app_right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live cases by country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"One9p6xGG6nA51VGY68mbLjwILk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Nirushi Wijesiri/OneDrive/Desktop/Projects/covid-19-tracker/covid-19-tracker/src/App.js"],"names":["React","useEffect","useState","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","App","countries","setCountries","country","setCounty","countryInfo","setCountryInfo","tabledata","setTableData","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","onCountryChange","event","countryCode","target","url","console","log","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths","tableData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {MenuItem, FormControl, Select, Card, CardContent} from \"@material-ui/core\"\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./\"\nimport './App.css';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCounty] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tabledata, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch (\"https://disease.sh/v3/covid-19/all\")\n    .then((response) => response.json())\n    .then((data) => {\n      setCountryInfo(data)\n    })\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch (\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) => {\n        const countries = data.map((country) => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n\n        setTableData(data);\n        setCountries(countries);\n      })\n    }\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = (event) => {\n    const countryCode = event.target.value;\n    setCounty(countryCode);\n\n    const url = countryCode ==='worldwide' \n      ? 'https://disease.sh/v3/covid-19/all' \n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCounty(countryCode);\n      setCountryInfo(data);\n    })\n    console.log(countryCode)\n    console.log(\"Country Info >>> \", countryInfo)\n  }\n  // console.log(countryCode)\n  // console.log(\"Country Info >>> \", countryInfo)\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n        <div className=\"app_header\">\n          {/*Header */}\n          {/*Title + Select input dropdown field */}\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app_dropdown\">\n            <Select varient=\"outlined\" \n              onChange={onCountryChange}\n              value={country}>\n              {/*Loop through all the countries and show a drop down list*/}\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app_stats\">\n          {/*InfoBoxs title=\"Coronavirus cases\"*/}\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases}/>\n          {/*InfoBoxs title=\"Coronavirus recoveries\"*/}\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered}/>\n          {/*InfoBoxs title=\"Coronavirus deaths\"*/}\n          <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\n        </div>\n\n        {/*Map */}\n        <Map />\n      </div>\n\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3>Live cases by country</h3>\n          {/*Table */}\n          <table countries={tableData} />\n          <h3>Worldwide new cases</h3>\n          {/*Graph */}\n        </CardContent>\n      </Card>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}