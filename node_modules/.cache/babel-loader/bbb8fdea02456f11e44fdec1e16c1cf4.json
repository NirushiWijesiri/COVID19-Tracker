{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nirushi Wijesiri\\\\OneDrive\\\\Desktop\\\\Projects\\\\covid-19-tracker\\\\covid-19-tracker\\\\src\\\\LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n    data[casesType].forEach(date => {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    });\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n      console.log(data);\n      const chartData = buildChartData(data);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am a graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [data]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["C:/Users/Nirushi Wijesiri/OneDrive/Desktop/Projects/covid-19-tracker/covid-19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","LineGraph","data","setData","buildChartData","casesType","chartData","lastDataPoint","forEach","date","newDataPoint","x","y","push","fetch","then","response","json","console","log","datasets"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,cAAc,GAAG,CAACF,IAAD,EAAOG,SAAS,GAAC,OAAjB,KAA6B;AAChD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;AAEAL,IAAAA,IAAI,CAACG,SAAD,CAAJ,CAAgBG,OAAhB,CAAyBC,IAAD,IAAU;AAC9B,UAAIF,aAAJ,EAAkB;AACd,cAAMG,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEF,IADc;AAEjBG,UAAAA,CAAC,EAAEV,IAAI,CAACG,SAAD,CAAJ,CAAgBI,IAAhB,IAAwBF;AAFV,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACH;;AACDH,MAAAA,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBI,IAAhB,CAAhB;AACH,KATD;AAUA,WAAOH,SAAP;AACH,GAfD;;AAiBAP,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMb,IAAI,IAAI;AACVgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,YAAMI,SAAS,GAAGF,cAAc,CAACF,IAAD,CAAhC;AACAC,MAAAA,OAAO,CAACG,SAAD,CAAP;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEK,QAAC,IAAD;AAAM,MAAA,IAAI,EAAI;AACVc,QAAAA,QAAQ,EAAE,CACNlB,IADM;AADA;AAAd;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAzCQD,S;;KAAAA,S;AA2CT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\n\r\nfunction LineGraph() {\r\n    const [data, setData] = useState({});\r\n\r\n    const buildChartData = (data, casesType='cases') => {\r\n        const chartData = [];\r\n        let lastDataPoint;\r\n\r\n        data[casesType].forEach((date) => {\r\n            if (lastDataPoint){\r\n                const newDataPoint = {\r\n                    x: date,\r\n                    y: data[casesType][date] - lastDataPoint\r\n                }\r\n                chartData.push(newDataPoint);\r\n            }\r\n            lastDataPoint = data[casesType][date];\r\n        });\r\n        return chartData;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            const chartData = buildChartData(data);\r\n            setData(chartData);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>I am a graph</h1>\r\n             <Line data = {{\r\n                 datasets: [\r\n                     data\r\n                 ]\r\n             }}\r\n            /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n"]},"metadata":{},"sourceType":"module"}